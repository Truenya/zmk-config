/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * To use home rows - &hm LSHFT F
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY 0
#define NUMB 1
#define NAVI 2
#define ADJUST 3

/ {

    behaviors {        
        hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick_tap_ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// .--------------------------------------------------------------.       .-----------------------------------------------------------.
// |   TAB        |    Q    |    W   |   E    |    R    |    T    |       |   Y   |    U    |    I    |    O    |     P    |   BKSP   |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   LCTRL      |    A    |    S   |   D    |    F    |    G    |       |   H   |    J    |    K    |    L    |     ;    |     '    |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   LSHFT      |    Z    |    X   |   C    |    V    |    B    |       |   N   |    M    |    ,    |    .    |     /    |   ESC    |
// '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
//                                   |   F1   |   MO1   |   SPC   |       |  ENT  |   MO2   |  RALT   |
//                                   '--------+---------+---------'       '-------+---------+---------'
                        bindings = <
   &kp TAB        &kp Q       &kp W      &kp E     &kp R           &kp T   &kp Y  &kp U           &kp I        &kp O     &kp P      &kp BSPC
   &kp LCTRL      &kp A       &kp S      &kp D     &kp F           &kp G   &kp H  &kp J           &kp K        &kp L     &kp SEMI   &kp SQT
   &kp LSHFT      &kp Z       &kp X      &kp C     &kp V           &kp B   &kp N  &kp M           &kp COMMA    &kp DOT   &kp FSLH   &kp ESC
                  &kp F1      &mo 1      &kp SPACE                 &kp ENTER      &mo 2           &kp RALT
                        >;
                };
                
                lower_layer {
// .--------------------------------------------------------------.       .-----------------------------------------------------------.
// |    F3     |     1    |     2    |    3   |    4    |    5    |       |   6   |    7    |    8    |    9    |     0    |    `     |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |    F5     |     (    |     )    |    {   |    }    |    #    |       |   -   |    =    |    [    |    ]    |     {    |    }     |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   SHFT    |     \    |     &    |    ,   |    .    |    $    |       |   ]   |    }    |         |    _    |          |          |
// '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
//                                   |    F2  |         |   MO3   |       |   ,   |    .    |   ?     |
//                                   '--------+---------+---------'       '-------+---------+---------'
                        bindings = <
   &kp F3     &kp N1         &kp N2            &kp N3             &kp N4               &kp N5            &kp N6                   &kp N7             &kp N8                 &kp N9                   &kp N0     &kp DEL
   &kp F5     &kp LPAR       &kp RPAR          &kp LBKT           &kp RBKT             &kp HASH          &kp MINUS                &kp EQUAL          &kp LEFT_BRACKET       &kp RIGHT_BRACKET        &kp RPAR   &kp COLON
   &kp LSHFT  &kp BSLH       &kp AMPS          &kp COMMA          &kp DOT              &kp DLLR          &kp RIGHT_BRACKET        &kp RIGHT_BRACE    &trans                 &kp UNDERSCORE           &trans     &kp GRAVE
                                               &kp F2             &trans               &mo ADJUST        &kp KP_N1                &kp KP_N2          &kp KP_N3
                        >;
                };
                
                raise_layer {
// .-------------------------------------------------------.        .----------.------------------------------------------.
// |  F1  |   F2  |   F3   |    F4   |    F5    |   F6     |        |   F7     |    F8    |    F9   |   F10   | F11 | F12 |
// |----------------+-------+--------+--------+----------+-|        |----------+----------+---------+---------+-----+-----|
// |      |       |  LEFT  |   DOWN  |   RIGHT  |   END    |        |  LEFT    |   DOWN   |    UP   |  RIGHT  |     |     |
// |----------------+-------+--------+--------+------------|        |----------+----------+---------+---------+-----+-----|
// |      |       |        |         |CTRL+LEFT |CTRL+RIGHT|        |CTRL+LEFT |CTRL+RIGHT|         |         |     |     |
// '---------------------------------+--------+------------|        |----------+----------+---------+---------+-----+-----'
//                         |  GUI    |    MO3   |          |        |          |          |         |
//                         '---------+----------+----------'        '----------+----------+---------'

                        bindings = <
   &kp F1          &kp F2     &kp F3             &kp F4            &kp F5              &kp F6                    &kp F7               &kp F8                  &kp F9           &kp F10            &kp F11      &kp F12
   &kp A           &trans     &kp LEFT_ARROW     &kp DOWN_ARROW    &kp RIGHT_ARROW     &kp END                   &kp LEFT_ARROW       &kp DOWN_ARROW          &kp UP_ARROW     &kp RIGHT_ARROW    &kp END      &trans
   &out OUT_TOG    &trans     &trans             &trans            &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)       &kp LC(LEFT_ARROW)   &kp LC(RIGHT_ARROW)     &trans           &trans             &trans       &trans
                                                 &kp LGUI          &mo ADJUST          &trans                    &kp PAGE_UP  &trans  &kp PAGE_DOWN
                        >;
                };
// OUT_TOG - перереключение между Bluetooth и USB 

                adjust_layer {
// .--------------------------------------------------------.       .--------------------------------------------------------------.
// |         |        |        |        |         |         |       |  VOL+  |        |         |         |          |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// |  BTCLR  |  BT1   |  BT2   |  BT3   |  BT4    |  BT5    |       |  VOL-  |        |         |         |          |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// | OUT_TOG |        |        |        |         |         |       |        |        |         |         |          |             |
// '---------------------------+--------+---------+---------+       |--------+--------+---------+----------------------------------'
//                             |        |         |         |       | > / || |        |    >>   |
//                             '--------+---------+---------'       '--------+--------+---------'

                        bindings = <
   &reset       &trans          &trans         &trans          &trans          &trans            &kp C_VOLUME_UP    &trans &trans  &trans &trans &trans
   &bt BT_CLR   &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4      &kp C_VOLUME_DOWN  &trans &trans  &trans &trans &trans
   &out OUT_TOG &trans          &trans         &trans          &trans          &trans            &trans             &trans &trans  &trans &trans &trans
                                               &trans          &trans          &trans            &kp K_PP           &trans &kp K_NEXT
                        >;
                };
        };
};
